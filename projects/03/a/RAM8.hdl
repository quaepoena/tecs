// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then
 * the in value is loaded into the memory location specified by address
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:

    DMux8Way(in=load, sel=address, a=dmux8-a, b=dmux8-b, c=dmux8-c, d=dmux8-d, e=dmux8-e, f=dmux8-f, g=dmux8-g, h=dmux8-h);

    Register(in=in, load=dmux8-a, out=reg-a);
    Register(in=in, load=dmux8-b, out=reg-b);
    Register(in=in, load=dmux8-c, out=reg-c);
    Register(in=in, load=dmux8-d, out=reg-d);
    Register(in=in, load=dmux8-e, out=reg-e);
    Register(in=in, load=dmux8-f, out=reg-f);
    Register(in=in, load=dmux8-g, out=reg-g);
    Register(in=in, load=dmux8-h, out=reg-h);

    Mux8Way16(a=reg-a, b=reg-b, c=reg-c, d=reg-d, e=reg-e, f=reg-f, g=reg-g, h=reg-h, sel=address, out=out);

}