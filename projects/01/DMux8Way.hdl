// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/DMux8Way.hdl

/**
 * 8-way demultiplexor:
 * {a, b, c, d, e, f, g, h} = {in, 0, 0, 0, 0, 0, 0, 0} if sel == 000
 *                            {0, in, 0, 0, 0, 0, 0, 0} if sel == 001
 *                            etc.
 *                            {0, 0, 0, 0, 0, 0, 0, in} if sel == 111
 */

CHIP DMux8Way {
    IN in, sel[3];
    OUT a, b, c, d, e, f, g, h;

    PARTS:
    Not(in=sel[0], out=not-sel-0);
    Not(in=sel[1], out=not-sel-1);
    Not(in=sel[2], out=not-sel-2);

    And(a=in, b=not-sel-2, out=and-0);
    And(a=not-sel-1, b=not-sel-0, out=and-1);
    And(a=and-0, b=and-1, out=a);

    And(a=in, b=not-sel-2, out=and-2);
    And(a=not-sel-1, b=sel[0], out=and-3);
    And(a=and-2, b=and-3, out=b);

    And(a=in, b=not-sel-2, out=and-4);
    And(a=sel[1], b=not-sel-0, out=and-5);
    And(a=and-4, b=and-5, out=c);

    And(a=in, b=not-sel-2, out=and-6);
    And(a=sel[1], b=sel[0], out=and-7);
    And(a=and-6, b=and-7, out=d);

    And(a=in, b=sel[2], out=and-8);
    And(a=not-sel-1, b=not-sel-0, out=and-9);
    And(a=and-8, b=and-9, out=e);

    And(a=in, b=sel[2], out=and-10);
    And(a=not-sel-1, b=sel[0], out=and-11);
    And(a=and-10, b=and-11, out=f);

    And(a=in, b=sel[2], out=and-12);
    And(a=sel[1], b=not-sel-0, out=and-13);
    And(a=and-12, b=and-13, out=g);

    And(a=in, b=sel[2], out=and-14);
    And(a=sel[1], b=sel[0], out=and-15);
    And(a=and-14, b=and-15, out=h);

}